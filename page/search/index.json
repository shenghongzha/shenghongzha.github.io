[{"content":" 最近学习的许多东西，有温习以前学的知识，也有学的许多知识。学新的东西踩坑是无法避免的，这时就只能去网上搜索。但总有一些问题是别人从未遇到的，又不敢去stackflow提问（其实主要是英语有点差），这时就只能自己去琢磨，研究。自己这次跑通流程，但下次却又未必。于是便有用博客记录一下的想法，希望自己下次不会踩同样的坑，也希望别人下次遇到同样的问题时，能在我的博客的帮助下快速解决。所以这篇文章将主要记录我搭建这个博客从头到尾的一个过程以及中间遇到的问题与解决方案，希望对你有用。\n#\r搭建博客系统\r#\r博客系统选型\r对于博客系统，我只了解过以下三种：\nWordPress,一款基于PHP的博客框架，或许因为PHP的原因，也或许是以前用过的原因，我对其印象不是那么好。 GitBook,之前学习某些知识，有些文档就是这个写的，感觉不是很符合我的审美，也果断放弃。 VuePress,不怎么会Vue，也就放弃了。 至于我为何选择Hugo,来源于我看到的一篇“悟空非空也”的一篇博客文章“搭建个人博客，最想推荐的 10 大框架，强烈建议收藏”，大家也可以根据自己的个人需求选择适合自己的博客系统。 #\r博客系统构建\r❗以下博客系统的搭建基于Hugo\n博客的搭建过程主要基于以下几个文档，有能力的同学可以自己阅读 Hugo官方文档 Stack主题官方文档 Stack中文文档 giscus评论系统文档 github GraphQL API官方文档 #\r安装Hugo\r官网在安装教程中有提到先决条件，如下图所示 不过我并未按照其配置这三种环境，我并不清楚不配置这是三种环境的问题，不过觉得并不会产生大的影响（毕竟我们并不需要从源码进行编译，使用编译好的即可），我的电脑上本身便具备Go语言环境与Git，在react中我又曾使用过过SASS，所以对于这“先决条件”，是否一定需要配置，还是自行决定。\nGithub直接下载自己系统对应的Releases的压缩包就行。Windows系统就下载下图红框的任意一个即可，推荐下载extended版。standard and extended的区别详见官网：standard and extended的区别 解压压缩包到任意位置 添加环境变量，打开设置-系统性息（可右击“此电脑”，选择属性；或右击底下的windows图标选择系统），依次点击“高级系统设置”，“环境变量”。双击打开“Path”，新增一条，位置选择自己保存Hugo的目录。 检验是否配置环境变量成功，在任意一个目录下，右击, 选择“在终端中打开”,输入 hugo version,换回类似于如下结果即代表配置成功 #\r快速选择启动一个博客\r以下内容参考官方文档的Quick start\n进入你想要保存博客的文件，打开终端，输入指令hugo new site blog\n进入创建出来的“blog”文件夹（将上面指令的“blog”可以任意更换，创建出的文件夹与指令中的名字保持一致），输入hugo server启动预览服务。\n#\r安装并配置一个好看的主题（以Stack为例）\r以下内容参照Stack官方文档Getting Started和Config，以Git子模块方式安装（默认读者需要自己使用git）。\n进入存放博客数据的文件夹，在上文中为“blog”文件夹， 使用以下命令安装主题。 git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack 配置Stack主题。 编辑“hugo.toml”，可更具以下模板进行更改。 baseurl = \u0026#34;博客的链接\u0026#34; languageCode = \u0026#34;zh-Hans\u0026#34; paginate = 5 title = \u0026#34;博客的名字\u0026#34; DefaultContentLanguage = \u0026#34;zh-cn\u0026#34; # Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko] # This will make .Summary and .WordCount behave correctly for CJK languages. hasCJKLanguage = false # Change it to your Disqus shortname before using disqusShortname = \u0026#34;名字\u0026#34; theme = \u0026#34;hugo-theme-stack\u0026#34; 在“blog”文件夹中创建“config”文件夹，并在“config”文件夹下创建“_default”文件夹，再在“_default”文件下创建\u0026quot;menu.toml\u0026quot;和“params.toml” 文件，其目录结构应如下： blog ├─config │ └─_default │ ├─params.toml │ └─menu.toml ├─... ├─hugo.toml └─themes └─hugo-theme-stack # ---------menu.toml------------- # Configure main menu and social menu [[main]] identifier = \u0026#34;home\u0026#34; name = \u0026#34;Home\u0026#34; url = \u0026#34;/\u0026#34; [main.params] icon = \u0026#34;home\u0026#34; newtab = true [[social]] identifier = \u0026#34;github\u0026#34; name = \u0026#34;GitHub\u0026#34; url = \u0026#34;https://github.com/xxxx\u0026#34; [social.params] icon = \u0026#34;brand-github\u0026#34; [[social]] identifier = \u0026#34;twitter\u0026#34; name = \u0026#34;Twitter\u0026#34; url = \u0026#34;https://twitter.com/xxxx\u0026#34; [social.params] icon = \u0026#34;brand-twitter\u0026#34; # ---------params.toml------------- # Pages placed under these sections will be shown on homepage and archive page. mainSections = [\u0026#34;post\u0026#34;] # Output page\u0026#39;s full content in RSS. rssFullContent = true favicon = \u0026#34;/favicon.png\u0026#34; [footer] since = 2024 customText = \u0026#34;感谢各位老爷的支持\u0026#34; [dateFormat] published = \u0026#34;Jan 02, 2006\u0026#34; lastUpdated = \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; [sidebar] emoji = \u0026#34;😄\u0026#34; subtitle = \u0026#34;人生得意须尽欢，莫使金樽空对月！\u0026#34; compact = false #侧边栏精简版本 [sidebar.avatar] enabled = true local = true src = \u0026#34;img/logo.jpg\u0026#34; [article] math = false readingTime = true [article.license] enabled = false default = \u0026#34;Licensed under CC BY-NC-SA 4.0\u0026#34; ## Widgets [[widgets.homepage]] type = \u0026#34;search\u0026#34; [[widgets.homepage]] type = \u0026#34;archives\u0026#34; [widgets.homepage.params] limit = 5 [[widgets.homepage]] type = \u0026#34;categories\u0026#34; [widgets.homepage.params] limit = 10 [[widgets.homepage]] type = \u0026#34;tag-cloud\u0026#34; [widgets.homepage.params] limit = 10 [[widgets.page]] type = \u0026#34;toc\u0026#34; [opengraph.twitter] site = \u0026#34;\u0026#34; card = \u0026#34;summary_large_image\u0026#34; [defaultImage.opengraph] enabled = false local = false src = \u0026#34;\u0026#34; [colorScheme] toggle = true default = \u0026#34;auto\u0026#34; [imageProcessing.cover] enabled = true [imageProcessing.content] enabled = true ## Comments [comments] enabled = true provider = \u0026#34;giscus\u0026#34; [comments.disqusjs] shortname = \u0026#34;\u0026#34; apiUrl = \u0026#34;\u0026#34; apiKey = \u0026#34;\u0026#34; admin = \u0026#34;\u0026#34; adminLabel = \u0026#34;\u0026#34; [comments.utterances] repo = \u0026#34;\u0026#34; issueTerm = \u0026#34;pathname\u0026#34; label = \u0026#34;\u0026#34; [comments.remark42] host = \u0026#34;\u0026#34; site = \u0026#34;\u0026#34; locale = \u0026#34;\u0026#34; [comments.vssue] platform = \u0026#34;\u0026#34; owner = \u0026#34;\u0026#34; repo = \u0026#34;\u0026#34; clientId = \u0026#34;\u0026#34; clientSecret = \u0026#34;\u0026#34; autoCreateIssue = false [comments.waline] serverURL = \u0026#34;\u0026#34; lang = \u0026#34;\u0026#34; visitor = \u0026#34;\u0026#34; avatar = \u0026#34;\u0026#34; emoji = [\u0026#34;https://cdn.jsdelivr.net/gh/walinejs/emojis/weibo\u0026#34;] requiredMeta = [\u0026#34;name\u0026#34;, \u0026#34;email\u0026#34;, \u0026#34;url\u0026#34;] placeholder = \u0026#34;\u0026#34; [comments.waline.locale] admin = \u0026#34;Admin\u0026#34; [comments.twikoo] envId = \u0026#34;\u0026#34; region = \u0026#34;\u0026#34; path = \u0026#34;\u0026#34; lang = \u0026#34;\u0026#34; [comments.cactus] defaultHomeserverUrl = \u0026#34;https://matrix.cactus.chat:8448\u0026#34; serverName = \u0026#34;cactus.chat\u0026#34; siteName = \u0026#34;\u0026#34; [comments.giscus] repo = \u0026#34;\u0026#34; repoID = \u0026#34;\u0026#34; category = \u0026#34;\u0026#34; categoryID = \u0026#34;\u0026#34; mapping = \u0026#34;pathname\u0026#34; lightTheme = \u0026#34;light\u0026#34; darkTheme = \u0026#34;dark\u0026#34; reactionsEnabled = 1 emitMetadata = 0 [comments.gitalk] owner = \u0026#34;\u0026#34; admin = \u0026#34;\u0026#34; repo = \u0026#34;\u0026#34; clientID = \u0026#34;\u0026#34; clientSecret = \u0026#34;\u0026#34; [comments.cusdis] host = \u0026#34;\u0026#34; id = \u0026#34;\u0026#34; Github 如何获取仓库的 repo_id 和 category_id #\r写第一个博客\r在“blog”文件夹下使用hugo new content post/first.md即可开始第一篇博客的创作，其内容会生成在“blog/content/post”目录下。 预览草稿hugo server --buildDrafts 生成htmlhugo #\r中间踩的一些坑和解决方案\r#\r配置Stack主题\rQuestion 使用git安装出的主题不会配置 官方文档中配置只给出了每个字段配置的是什么内容，也给出了“Fields under :Params”但由于对于toml配置文件的不熟悉，我仍然无法进行有效配置。\nAnswer 参考官方使用文档hugo-theme-stack-starter,发现其配置均位于“\\config\\_default”路径下,因此在根目录下创建相同路径进行配置。 对于toml配置文件，其配置类似于.ini,是由一块一块组成，其“Fields under :Params”即代表在[Params]块下，也等价于在“\\config\\_default”路径下的“params.toml”文件中。 #\r进行创作\rQuestion 使用hugo创建的content好像无法使用tags等内容 Stack中文文档中开始创作使用slug、image、categories、tags,在md中使用，运行时报错。\nAnswer hugo new content创建的md头是以+++\u0026hellip;+++包裹，而示例中是以\u0026mdash;\u0026hellip;\u0026mdash;对包裹，需要改变之后，才能正常使用。\n","date":"2024-04-18T23:13:18+08:00","image":"https://blog.mokuai.space/post/blog-build/stack-blog-cover_hu914b6d0854c49bf02ef8dcafcb8f4589_90016_120x120_fill_box_smart1_3.png","permalink":"https://blog.mokuai.space/post/blog-build/","title":"用hugo搭建一个属于自己的博客"}]